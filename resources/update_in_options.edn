(->>
 {:title "update-in* performance"

  :fastester-UUID #uuid "ffaad48e-c77b-48dc-bd5f-8c4af5332cf5"

  :benchmarks {'fn-in.performance.update-in-benchmarks
               #{'test-update-in*-list
                 'test-update-in*-map
                 'test-update-in*-seq
                 'test-update-in*-vec
                 'test-update-in*-vec-2
                 'test-update-in-map
                 'test-update-in-vec
                 'test-update-in-vec-2}}

  :html-filename "update_in_performance.html"
  :img-subdirectory "img_update_in/"
  :markdown-filename "update_in_performance.md"
  :results-directory "resources/fn_in_performance/update_in/"

  :preamble [:div
             [:p [:code "update-in*"]
              " version 5 offers notable performance improvements for nested
 hashmaps and nested vectors."]

             [:p "See the "
              [:a {:href "https://blosavio.github.io/fn-in/performance_summary.html"} "overall summary"]
              " for benchmarking details. The benchmarks displayed in this
 document are defined "
              [:a {:href "https://github.com/blosavio/fn-in/blob/master/test/fn_in/performance/update_in_benchmarks.clj"} "here"]
              "."]]

  :comments
  {"Sequences"
   [:div
    [:p "Version 5 provides slightly improved performance when handling nested
 lists."]]

   "Hashmaps"
   [:div
    [:p "Version 5 improves performance to within 18% of "
     [:code "clojure.core/update-in"]
     " when handling hashmaps."]]

   "Lists"
   [:div
    [:p "Version 5 improves performance 5 to 15% when handling lists."]]

   "Vectors"
   [:div
    [:p "Version 5 performs about twice as fast as version 4 on nested
 vectors."]]}


  :chart-settings
  {"(fn [n] (update-in (nested-map n) (path-map n) inc))"
   {:x-axis-logarithmic? false
    :y-axis-logarithmic? false}

   "(fn [n] (update-in* (nested-map n) (path-map n) inc))"
   {:x-axis-logarithmic? false
    :y-axis-logarithmic? false}

   "(fn [n] (update-in* (nested-list n) (path-list n) inc))"
   {:x-axis-logarithmic? false
    :y-axis-logarithmic? false}

   "(fn [n] (update-in* (nested-seq n) (path-seq n) inc))"
   {:x-axis-logarithmic? false
    :y-axis-logarithmic? false}

   "(fn [n] (update-in (narrow-deep-vec n) (path-narrow-deep-vec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update-in (nested-vec n) (path-nested-vec n) inc))"
   {:x-axis-logarithmic? false
    :y-axis-logarithmic? false}

   "(fn [n] (update-in* (narrow-deep-vec n) (path-narrow-deep-vec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update-in* (nested-vec n) (path-nested-vec n) inc))"
   {:x-axis-logarithmic? false
    :y-axis-logarithmic? false}}}
 (merge (load-file "resources/fastester_options_base.edn")))

