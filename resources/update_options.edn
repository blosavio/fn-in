(->>
 {:title "update* performance"

  :fastester-UUID #uuid "f6698382-3d68-4305-8210-41942be1724d"

  :benchmarks {'fn-in.performance.update-benchmarks
               #{'test-update*-list
                 'test-update*-map
                 'test-update*-seq
                 'test-update*-vec
                 'test-update-map
                 'test-update-seq
                 'test-update-vec}}

  :html-filename "update_performance.html"
  :img-subdirectory "img_update/"
  :markdown-filename "update_performance.md"
  :results-directory "resources/fn_in_performance/update/"

  :preamble [:div
             [:p "Aside from lists, "
              [:code "update*"]
              " version 5 is about 50% faster than version 4."]

             [:p "See the "
              [:a {:href "https://blosavio.github.io/fn-in/performance_summary.html"} "overall summary"]
              " for benchmarking details. The benchmarks displayed in this
 document are defined "
              [:a {:href "https://github.com/blosavio/fn-in/blob/master/test/fn_in/performance/update_benchmarks.clj"} "here"]
              "."]]

  :comments
  {"Sequences"
   [:div
    [:p [:code "update*"]
     " version 5 performance handling sequences improved by a factor of two."]]

   "Hashmaps"
   [:div
    [:p [:code "update*"]
     " version 5 performance improved to within 8% that of "
     [:code "clojure.core/update"]
     "."]]

   "Lists"
   [:div
    [:p "Performance on lists did not perceptibly change between versions."]]

   "Vectors"
   [:div
    [:p "Version 5 performance improved by about 50%."]]}


  :chart-settings
  {"(fn [n] (update (map-of-n-key-vals n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update* (map-of-n-key-vals n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update* (list-of-n-rand-ints n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? true}

   "(fn [n] (update (seq-of-n-rand-ints n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update* (seq-of-n-rand-ints n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update (vec-of-n-rand-ints n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}

   "(fn [n] (update* (vec-of-n-rand-ints n) (dec n) inc))"
   {:x-axis-logarithmic? true
    :y-axis-logarithmic? false}}}
 (merge (load-file "resources/fastester_options_base.edn")))

